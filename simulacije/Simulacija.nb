(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     15604,        336]
NotebookOptionsPosition[     15245,        319]
NotebookOutlinePosition[     15589,        334]
CellTagsIndexPosition[     15546,        331]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"xs", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ys", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xd", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BH1", "=", 
   RowBox[{
    RowBox[{"r0", " ", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
    RowBox[{"xs", " ", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
    RowBox[{"ys", " ", 
     RowBox[{"Sin", "[", "theta", "]"}]}], "-", "xd"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BH2", "=", 
   RowBox[{
    RowBox[{"r0", " ", 
     RowBox[{"Sin", "[", "theta", "]"}]}], "+", 
    RowBox[{"xs", " ", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
    RowBox[{"ys", " ", 
     RowBox[{"Sin", "[", "theta", "]"}]}], "-", "xd"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"BH2", "/", "BH1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kotmerjeni", "=", 
    RowBox[{"ArcTan", "[", "x", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"serija", "=", 
   RowBox[{"x", "-", 
    RowBox[{
     RowBox[{"x", "^", "3"}], "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", "serija", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zaplot", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"TrigReduce", "[", "serija", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"kotmerjeni", "-", "theta"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta", ",", "0", ",", 
     RowBox[{"Pi", " ", "2"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.706272652371857*^9, 3.706272914090827*^9}, {
  3.7062729806496334`*^9, 3.7062729836418047`*^9}, {3.70627304772147*^9, 
  3.706273053736814*^9}, {3.7062731950008936`*^9, 3.7062731986481023`*^9}, {
  3.706273274952467*^9, 3.706273285255056*^9}, {3.7062733835586786`*^9, 
  3.7062734742468657`*^9}, {3.706273522423621*^9, 3.7062735432698135`*^9}, {
  3.706273578853849*^9, 3.7062736073654795`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.1`"}], "+", 
        RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], "2"], "-", 
     RowBox[{"0.3333333333333333`", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.1`"}], "+", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ")"}], "2"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.1`"}], "+", 
     RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.1`"}], "+", 
     RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], "3"]]], "Output",
 CellChangeTimes->{
  3.706272738809801*^9, 3.706272815051162*^9, {3.7062728848561544`*^9, 
   3.706272915270894*^9}, 3.7062729863139577`*^9, 3.706273055076891*^9, 
   3.7062732009242325`*^9, 3.706273286351119*^9, {3.706273391579138*^9, 
   3.7062734803062124`*^9}, {3.7062735270798874`*^9, 3.706273544044858*^9}, {
   3.706273600280074*^9, 3.706273608261531*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV13k8VF8bAPCZsc3Ywpg7RhKyVUSiFfepRMq+lKQSSilLihYlSRKSJEsp
3ihElpClxSVaJD9LtlbZokUq+/o+/vL5fs6d+5zznHPP81B08bbZx6DRaBN0
Gm3uL1+5cF2X3jnDQlmTbiG7J+UKhIKq/LU95Mi+Vxr5Jk/Khz9FW7THeJP+
KSKu1uuelHesf935KOYsOftX5Y6/0pPy5qM92XdjrpApEo3ZdoOPy+sj/0ne
ikkm26ozpfeGPy43TzxVlRCTS+aoii99W1xW7neCzz8mrZQsKF0wcCWltDxy
4bNbcTHl5H9Na2aujpWUfx8VnF1/tJ6UWyEgm/OssHz19FWrAp82Mihyz7x0
67zy158dzjMWdZBMyW1nNdall8MGu8l7Lt0kHH02kPI1odzRx3SwaEcfSWt6
0/fqjE/5M8UlwdTdn2THG0+rT8djSLuEJamfvAbJlNqXNWnsNHK+wNON0fv/
kikpaz8qlDwgL66ofkiFDZFWu5lqC4sKyBaTANOS6CGSFjowZfeigFR2Wt6R
mzBEOr/c/ux8awFZGXJLLDljiAwy6Bl4M15AzjT7HTjzCseJbf6ChoWk/wlV
+bXMYTJlqDZzYXUhuf/pxUsFF4dJWkXJdPnbIrKowUAh6wqOGxGRrM9FJH/v
v0d34tGT7w5sHSgi74g7d19NHyatpuQmi8UfkZ/3rCZ9Xg6T2r1n+XQtH5Hb
GP1DGkIj5OAho9KCukfkJpMtzvdCR0jQXOpV8LKYtBx0a/WLGiEV6ln2+S3F
5I7Esxab4kZICtbZpvcUk54/CvW7746QPkVZoQF8JeT1Kwt5StUjZFCNk0uV
YQnZ0zrUcItvlNTuUq54V1BC/g6aZ+opMkoGnXNwt6ksIccXL6H02aNkSpX1
j5f1JaTY6T05H5RGSYlzzYE3fpWQego14bwNoySY9x/7pFpKkq+76f2mON42
mMnTKyVNfWdPlFiPkoOTxf8z31hK7qrSdd++F+M9dKxN2lNKuntaflY9OErm
Pc0eK/YsJY8QHvYjPqMkzS7rfU1AKRlQHlJbfWKUpLYv8G6+VEpeOJC88XoQ
2rbuYWt8Kfn8ljGsDxslcxLVX6d1ClFXJMvK3NDGpVova+2YVGLZu+W60Rg/
3mPtLnSq6+8MvoRR8kT48cFftkzqgaiwQlPyKHk32bs/EF1cpBx/J32U5FYc
UpFAV+wmxX1zR8n1BSFp/7NhUs15x6YkykfJhr3eh6utmdSXHVeOdrwYJY/9
OlK0Hd3PuP89t26UtO77u/67FZOatvvSZvF5lDTSqVeRQKuMmxZFTo+SnUui
5++xYFJad9w0nATGyK8mC8//M2dSa7aeTV0qNkYOyvcvC0Ob3yq8WiM3Rt5w
CbN9aMak/NYv9GLqj5Gi/J5NrK1MqvrSkGrIqTHSTl26otqESbWwTK9PB4+R
VUnLHtqjey/d4jseMUYeOLx6uMeYSTHDjTsOJo2RTqLnjwiht4QnJFo+GyPb
6l9usjBiUnXh+qLzGeNkUazg0R/ApNoiQv7kXxonpf82X3Bby6T6RNr3LI0Z
J91Kp7tm1jCp8QjNurQb46Sh1nRcIlo2suV+fNY4aWTWNPnfaiblFKnudubt
OLm+jPEcVjGpr5G1LZslJ8jd9/gcdHSZ1PfL0k++JEyQPy56crctY1LRdNfZ
lykTpHaQpDEdvdIvf0NexgQ5r+EIla3JpIKdLF4HlUyQd45dT+BH85aGtSi2
TZBdg3dai5cyqc2vJgdduZPk2JuVNzQWM6l7jC6VvuuTpNLIej9LZSZl5r/8
YP2tSVI9SEOLH/23/2x2yd1J8q0QY2XpIiZl2CC34lLRJNmiHLFEGd2cvA2W
NE+SHULvc6cVmRS/QY3jYekpcnfnouXlC5nU3uP5VwZjpkjpoEy90/OZlHjl
mprgm1Pkp+PveXroMtFKfk7aFHlGc+WOAVkmJXWn8eSaoimyqzSwfy+6qvaf
a3DrFKkRU2FlzmNS6korV0vLTZMh1YP6elwm9bu2rGPV3WnSrrjshimbSSVx
N86veTBNJr3x7hdDb3Z5Y+/0aJpsi7t0rVGKSaWMfqgJejlNMrf2jTuhbZSm
C1/3T5NKhbrz/CWZ1KPj5KWdy2ZIDYVUx9J5TOqMUtXys8UzZN7+hS4hokyq
m55v1l8+Qy495j1hhzb7esvd9tUM+avy5HcVtGzK8Vtq7TPkmFFmwysRJlWy
YCmrfmKG1Pr89bEUekgmpkPBcJY8euj5xCMW7v9Y4GS48SxZX6ckehn9vPUQ
MWwxS0r1fj7mio6J22T2es8sGZVqbSaJ1pYeLz5ybpb04HOUOsJkUofnOV+p
rJolbx/YOQRCTOrdgNl9jbezJCtL/IQcel3dmuq45llypWaqzZggkxK+zJ70
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
aChdlQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-6.42508233799731, 0.09997318377857223}}, {{
     0, 6.283185307179586}, {-6.42508233799731, 0.09997318377857223}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.706272738809801*^9, 3.706272815051162*^9, {3.7062728848561544`*^9, 
   3.706272915270894*^9}, 3.7062729863139577`*^9, 3.706273055076891*^9, 
   3.7062732009242325`*^9, 3.706273286351119*^9, {3.706273391579138*^9, 
   3.7062734803062124`*^9}, {3.7062735270798874`*^9, 3.706273544044858*^9}, {
   3.706273600280074*^9, 3.706273608306534*^9}}]
}, Open  ]]
},
WindowSize->{1680, 968},
WindowMargins->{{-4, Automatic}, {Automatic, -4}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2203, 61, 312, "Input"],
Cell[2786, 85, 1076, 30, 53, "Output"],
Cell[3865, 117, 11364, 199, 266, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

